---
execute:
    echo: false
---
```{python}
import pandas as pd
import requests
import json
import csv
```

```{python}
# Initialisation images WMO
with open("descriptions.json", "r") as json_file:
    descriptions = json.load(json_file)


# Boucle d'images
for code_wmo, value in descriptions.items():
    description = value["description"]
    image_url = value["image"]

#Fonction qui renvoie l'url de l'image
def image_url(code_wmo):
    if code_wmo in descriptions:
        return descriptions[code_wmo]["image"]
    else:
        return "Code WMO non trouvé"
```

# EN CE MOMENT
```{python}
"""
DATA NOW
"""
url_current = "https://api.open-meteo.com/v1/forecast?latitude=43.6109&longitude=3.8763&current=temperature_2m,precipitation,weathercode,windspeed_10m,winddirection_10m&timezone=Europe%2FLondon"

response_current = requests.get(url_current)

# Vérification de l'url
if response_current.status_code == 200:
    data_current = response_current.json()

    # Création dataframe current
    df_current = pd.DataFrame(data_current)
    # print(df_current.iloc[:, -1])

    # Création csv associé
    df_current.to_csv("df_current.csv", index=False)

    # Extraction data current
    date_now = data_current["current"]["time"][:10]
    # print(date_now)
    temp_now = data_current["current"]["temperature_2m"]
    precip_now = data_current["current"]["precipitation"]
    wmo_now = data_current["current"]["weathercode"]
    strwmonow = f"{wmo_now}"
    wind_now = data_current["current"]["windspeed_10m"]
    wind_direc_now = data_current["current"]["winddirection_10m"]

#Création dataframe pour le rendu tableau
data_tab_now = {
    "Date": [date_now],
    "Température": [temp_now],
    "WMO": [image_url(strwmonow)],
    "Précipitation": [precip_now],
    "Vent": [wind_now],
    "Direction": [wind_direc_now],
}
df_tab_now = pd.DataFrame(data_tab_now)
```
```{python}
"""
Tableau en html des données de maintenant
"""
from IPython.display import HTML

tablenow = f"""
<table>
  <tr>
    <th style="text-align: center;">Date</th>
    <th style="text-align: center;">WMO</th>
    <th style="text-align: center;">Température</th>
    <th style="text-align: center;">Précipitations</th>
    <th style="text-align: center;">Vent</th>
  </tr>
  <tr>
    <td style="text-align: center; vertical-align: middle;">{date_now}</td>
    <td style="background-color: #f0f8ff; text-align: center;"><img src ={descriptions[str(wmo_now)]['image']}></td>
    <td style="text-align: center; vertical-align: middle;">{temp_now}°C</td>
    <td style="text-align: center; vertical-align: middle;">{precip_now}mm</td>
    <td style="text-align: center; vertical-align: middle;">{wind_now}kh/h</td>
  </tr>
</table>
"""

HTML(tablenow)
```

```{python}
#
#Voici un essai à la main
#
#from IPython.display import Markdown, display
#init=""
#A = init + f"![{descriptions[str(wmo_now)]['description']}]({descriptions[str(wmo_now)]['image']})"
#display(Markdown(A))
#
##Essai tableau en ligne
#a = "|" + f"{date_now}|"
#b = init + f"![{descriptions[str(wmo_now)]['description']}]({descriptions[str(wmo_now)]['image']})|"
#c = f"{temp_now}°C|"
#d = f"{precip_now}mm|"
#e = f"{wind_now}km/h|"
#head = "|Date|Icone|Température|Précipitations|Vent|"
#sepa = "|"
#for i in range(5):
#    sepa+= f":---:|"
#f= a + b + c + d + e
#g= head + "\n" +sepa +"\n" + f
#print(g)
#display(Markdown(g))
#
```

# PRÉVISIONS


> insérer tableau  
> graphique évolution température et vent 7 prochain jours avec curseur pour se déplacer





